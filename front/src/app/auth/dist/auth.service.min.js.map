{"version":3,"sources":["auth.service.ts"],"names":["core_1","require","angular_jwt_1","AuthService","this","jwtHelper","JwtHelperService","prototype","isAuthenticated","token","localStorage","getItem","isTokenExpired","__decorate","Injectable","providedIn","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBACAC,cAAAD,QAAA,sBAMAE,YAAA,WAAA,SAAAA,IACEC,KAAAC,UAAY,IAAIH,cAAAI,iBAUlB,OATSH,EAAAI,UAAAC,gBAAP,WACE,IAAMC,EAAQC,aAAaC,QAAQ,eACnC,OAAa,MAATF,IACML,KAAKC,UAAUO,eAAeH,IAL/BN,EAAWU,WAAA,CAHvBb,OAAAc,WAAW,CACVC,WAAY,UAEDZ,GAAb,GAAaa,QAAAb,YAAAA","file":"auth.service.min.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  jwtHelper = new JwtHelperService();\n  public isAuthenticated(): boolean {\n    const token = localStorage.getItem('accessToken');\n    if (token != null) {\n      return !this.jwtHelper.isTokenExpired(token);\n    } else {\n      return false;\n    }\n\n  }\n}\n"]}