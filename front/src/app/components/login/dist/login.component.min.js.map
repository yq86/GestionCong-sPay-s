{"version":3,"sources":["login.component.ts"],"names":["core_1","require","forms_1","LoginComponent","userService","router","this","prototype","ngOnInit","initForm","form","FormGroup","username","FormControl","password","submit","_this","invalid","userLogin","userName","value","login","subscribe","response","console","log","window","localStorage","setItem","accesstoken","user","role","navigate","error","getItem","alert","message","initError","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YACA,IAAAA,OAAAC,QAAA,iBACAC,QAAAD,QAAA,kBAWAE,eAAA,WAEI,SAAAA,EACUC,EACAC,GADAC,KAAAF,YAAAA,EACAE,KAAAD,OAAAA,EAsEd,OAzDEF,EAAAI,UAAAC,SAAA,WACEF,KAAKG,YAINN,EAAAI,UAAAE,SAAA,WACCH,KAAKI,KAAO,IAAIR,QAAAS,UAAU,CACxBC,SAAU,IAAIV,QAAAW,YAAY,IAC1BC,SAAU,IAAIZ,QAAAW,YAAY,OAO9BV,EAAAI,UAAAQ,OAAA,WAAA,IAAAC,EAAAV,KACMA,KAAKI,KAAKO,UAGdX,KAAKY,UAAY,CAAEC,SAAUb,KAAKI,KAAKU,MAAMR,SAAUE,SAAUR,KAAKI,KAAKU,MAAMN,UAEjFR,KAAKF,YAAYiB,MAAMf,KAAKY,WAAWI,UACrC,SAACC,GACKA,GACFC,QAAQC,IAAIF,GACZG,OAAOC,aAAaC,QAAQ,OAAQZ,EAAKN,KAAKU,MAAMR,UACpDc,OAAOC,aAAaC,QAAQ,cAAeL,EAASM,aAC3B,GAAtBN,EAASO,KAAKC,KACff,EAAKX,OAAO2B,SAAS,CAAC,sBACO,GAAtBT,EAASO,KAAKC,KACrBf,EAAKX,OAAO2B,SAAS,CAAC,YACQ,GAAtBT,EAASO,KAAKC,MACtBf,EAAKX,OAAO2B,SAAS,CAAC,YAIxBhB,EAAKiB,MAAQ,+BACbjB,EAAKP,WACLe,QAAQC,IAAIE,aAAaO,QAAQ,kBAGrC,SAACD,GACCE,MAAMF,EAAMG,aAKlBjC,EAAAI,UAAA8B,UAAA,WACE/B,KAAK2B,MAAQ,MAjEJ9B,EAAcmC,WAAA,CAL1BtC,OAAAuC,UAAU,CACTC,SAAU,YACVC,YAAa,yBACbC,UAAW,CAAC,4BAEDvC,GAAb,GAAawC,QAAAxC,eAAAA","file":"login.component.min.js","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Console } from 'console';\nimport { UserLogin } from 'src/app/models/user-login';\nimport { UserService } from '../../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    constructor(\n      private userService: UserService,\n      private router: Router\n  ) {}\n\n  form!: FormGroup;\n  userLogin!: UserLogin;\n  user: any;\n\n\n  error: string | null | undefined;\n\n\n\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n\n   initForm() { // initialize the form to create a drawing\n    this.form = new FormGroup({\n      username: new FormControl(''),\n      password: new FormControl(''),\n    });\n  //  this.userLogin = { userName: \"\", password: \"\" };\n  //  this.user = {};\n  //  this.error = null;\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.userLogin = { userName: this.form.value.username, password: this.form.value.password };\n\n    this.userService.login(this.userLogin).subscribe(\n      (response: any) => {\n        if (response) {\n          console.log(response)\n          window.localStorage.setItem('name', this.form.value.username);\n          window.localStorage.setItem('accessToken', response.accesstoken);\n          if(response.user.role == 3){\n            this.router.navigate(['employee-demandes']);\n          }else if(response.user.role == 2){\n            this.router.navigate(['manager']);\n          } else if(response.user.role == 1){\n            this.router.navigate(['admin']);\n          }\n          \n        } else {\n          this.error = \"username or password invalid\";\n          this.initForm();\n          console.log(localStorage.getItem('accessToken'));\n        }\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message)\n      }\n    )\n  }\n\n  initError() {\n    this.error = null;\n  }\n\n  /*\n  reroute() {\n    if (this.authService.isLoggedIn()) { //Si l'utilisateur est déjà connecté, le renvoie sur l'accueil.\n      this.router.navigate(['accueil']);\n    }\n  } */\n}\n"]}